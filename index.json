[{"authors":null,"categories":null,"content":"Hi i’m Paul.\nI like to employ machine learning methods on novel applications.\nI am one of the cocreators of StarAi \u0026amp; the StarAi Deep Reinforcement Learning course \u0026amp; am the Founder of the Sydney Machine Learning group, the largest community of machine learning practitioners in Sydney, Australia.\nThis page contains a brief summary of my work in the field of Machine Learning since I got started back in 2009.\nIf you would like to know more, Follow me on Twitter or read on.\n","date":-62135596800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"598b63dd58b43bce02403646f240cd3c","permalink":"https://PaulConyngham.github.io/author/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/admin/","section":"author","summary":"Hi i’m Paul.\nI like to employ machine learning methods on novel applications.\nI am one of the cocreators of StarAi \u0026amp; the StarAi Deep Reinforcement Learning course \u0026amp; am the Founder of the Sydney Machine Learning group, the largest community of machine learning practitioners in Sydney, Australia.\nThis page contains a brief summary of my work in the field of Machine Learning since I got started back in 2009.","tags":null,"title":"","type":"author"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"d41d8cd98f00b204e9800998ecf8427e","permalink":"https://PaulConyngham.github.io/author/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/","section":"author","summary":"","tags":null,"title":"Authors","type":"author"},{"authors":null,"categories":[],"content":"","date":1548585782,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1548585782,"objectID":"b128b7694e4de962e0088bcb1bcb254f","permalink":"https://PaulConyngham.github.io/test/","publishdate":"2019-01-27T21:43:02+11:00","relpermalink":"/test/","section":"","summary":"","tags":[],"title":"Test","type":"page"},{"authors":null,"categories":[],"content":"            By: Paul Steven Conyngham Reinforcement Learning Terminology Decoded #1:        Intro to Reinforcement Learning\nBy: Paul Steven Conyngham #Bandits!\nScientists, and machine learning researchers in particular love to give fancy names to things so that no one can understand what they are on about.\nFor someone relatively new to machine learning, \u0026ldquo;The multi armed bandit problem\u0026rdquo; sounds like one of these fancy names.\nThe Multi-Armed bandit is usually considered to be the starting point for many an introduction to Reinforcement learning. It is my hope that why this is becomes obvious by the end of this post.\nSo then, what the shell is a bandit?\nThis.\nA bandit is an old fashioned american name for what we usually call a \u0026ldquo;slot machine\u0026rdquo;.\nHere in Australia we like to call it the \u0026ldquo;pokies\u0026rdquo;.\nOk that is great and all, but what the shell is a multi armed bandit?\nSimply, this:\nA whole bunch of \u0026ldquo;bandits\u0026rdquo; stacked together such there are many \u0026ldquo;arms\u0026rdquo; to pull, this is where the \u0026ldquo;multi armed\u0026rdquo; part comes in.\nHold up, hold up.\nWhy are we talking about slot machines with regards to machine learning?\nWell, one definition for reinforcement learning, the subfield of machine learning that we are talking about here deals with:\n \u0026ldquo;Finding the optimal strategy to solving a problem in the face of massive uncertainty.\u0026rdquo;\n Ok great. Let\u0026rsquo;s see why this is important by expanding on and explaining this definition a little bit further by considering an example.\nLets say you wanted to drive your car from your home to your work.\nAlong your way you are not quite sure what the traffic lights will be doing or for that matter what the other cars will be doing. You could encounter 5 other cars that delay you at a roundabout, or you could encounter 10 red traffic lights in a row.\nThis is the uncertainty part in the definition above.\nWe also need a plan of what we will do once we encounter the intersections, roundabouts \u0026amp; traffic lights as we drive our car on our way to work.\nThis plan or strategy is what reinforcement learning aims to figure out, more specifically, reinforcement learning attempts to learn the optimal strategy - that is to say, the best possible strategy for a specific task (in this case, driving through all the obstacles of traffic lights, roundabouts etc from home to work.)\nSo this is the strategy part in the quote above.\nReinforcement Learning Terminology Decoded #1: In reinforcement learning the name given to the strategy that we are following to solve a given problem is called a policy.\n(so that is your first bit of fancy reinforcement learning terminology decoded).\nFollowing the previous example of driving to work. An example of a policy would be driving as fast as possible to work (this is our strategy).\nAnother example of a policy would be to ignore all red lights (again this could be another strategy).\n(Of course your policy could also be something boring. for example, only moving on green traffic lights, stopping for all other cars at roundabouts like I hope you are doing\u0026hellip; etc etc)\nOk so now we know that we are dealing with finding best strategies (policies) in the face of unknown conditions (uncertainty).\nWell, the reason that the multi armed bandit problem is usually brought up as the starting point of all reinforcement learning text books is that it introduces several core RL ideas, the first of which, is that in slot machines, you are dealing with uncertainty.\nThat is to say if you go up to a slot machine and pull the lever, you have no idea if you are going to get a payout in the form of cash or not.\nThe reason we examine the multi armed bandit as our \u0026ldquo;toy\u0026rdquo; problem for learning Reinforcement Learning is because it teaches us the second concept with regards to RL, that is, what do we do when we have more than one choice to solve a problem and would like to choose the best choice or in terms of our machine learning terminology from before - our best strategy or “policy”\u0026hellip;\nIn the (multi) bandit problem - what do we do when we have more than one slot machine to choose from , as in, we would like to know which slot machine is going to give us the biggest payout or reward- which machine is the best choice?\nHow do we go about figuring out which slot machine (or bandit) will go about giving us the biggest reward?\nLets get cracking on this problem by introducing another Reinforcement Learning idea and your first (baby) Reinforcement Learning Algorithm.\n#Exploration vs Exploitation\nThere is this age old problem in life and it goes something like this.\nLet’s say you are on the hunt for a hot date with the eventual goal of picking up a life partner.\nFirst you hop on your favourite dating app of choice. After chatting to a few people you manage to score yourself a hot date.\nThe way they were coming on to you so strongly on the first date was a was a bit weird, strike out ,you decide that\u0026rsquo;s it for the dating app person.\nYou decide dating apps are kind of lame, so you head out to the bar.\nYou manage to work up the courage to approach someone and after talking to them for a bit begin to realise that this person has really bad breath and might not quite be the right person for you.\nFinally, towards the end of the night and after a few drinks, you work up your last bit of courage to go over and talk to an attractive person, who has been looking at you over their shoulder all night.\nYou hit it off and get their number. Two years later you are in a happy relationship and decide to get married, happily, ever after.\nWhat does this have to do with machine learning?\nWhat was just described above is an age old problem in machine learning.\nHow much time do you spend \u0026ldquo;exploring\u0026rdquo;, (going on dates with people looking for a partner etc),\nVersus,\nHow much time do you spend, ahem, \u0026ldquo;exploiting\u0026rdquo; (being in a relationship with someone etc.)\nAnother example of Exploration vs Exploitation is how much time you spend looking at potential job opportunities (exploring) vs being in a particular job (exploiting).\nYet another example would be if you are a stock trader. How much time do you spend searching for the best trading strategy (exploring) vs implementing a strategy on the stock market (exploiting).\nThe reason we consider the exploration vs exploitation idea on the multi armed bandit problem (multi -slot machine problem), is that again remember there is more than one machine and _each slot machine\u0026rsquo;s is tuned slightly differently_, such that each slot machine will give payouts (rewards) of cash in different amounts.\nSo how then do we go about discovering which Bandit pays out the most?\nWell, if you have not guessed it already, what we would like to do is spend some time exploring - to see amongst our many slot machines, which slot machine gives the best payout.\nWhen we have discovered which machine gives the best payout, we then want to keep exploiting this machine.\nTime for your first RL (baby) algorithm\n#The Epsilon-Greedy Algorithm\nSimply, the Episilon Greedy Algorithm is this:\nSeriously though, if you did not understand that no dramas at all. The rest of this post is going to be about breaking apart the mathematical notation above into a more human readable format (HRF) :)\nOk so lets break the above apart and take this one step at a time:\n#Step 1: Epsilon\n######Reinforcement Learning Terminology Decoded #2:\nAccording to wikipedia Epsilon is the 5th letter of the Greek alphabet and looks like this:\n###ε\nHieroglyphics right?\nWhat epsilon is actually used for is the interesting bit.\nLets say we wanted to implement some kind of Exploration vs. Exploitation on a problem.\nHow would we do it?\nLets now examine the multi-armed bandit problem in a little bit more detail, to explain epsilon, greedy and the reason why we are examining this problem in the first place.\nLets say we have a bandit (slot machine) and that if I pulled the lever on the bandit 50 times, I would get data of the payout of that slot machine that looked like a bell curve like so:\nFigure 1. Average payout of a slot machine based on the amount of times that the lever has been pulled. For example, we can see that at around the $70 mark the lever on the slot machine has been pulled around 44 times.\nWe can say that our slot machine in the above graph, has an average payout of around $70- as we can see that the middle of the bell curve is roughly centered around the $70 mark.\n######Reinforcement Learning Terminology Decoded #3:\nIn machine learning we use another name for the bell curve (pictured below) and that name is the \u0026ldquo;normal distribution\u0026rdquo;. This is technically more correct as we will see soon. A distribution is usually \u0026ldquo;centered\u0026rdquo; around an average number.\nFigure 2: Normal distribution centered around 100.\nThe reason we use the distribution idea to represent our Bandit is because of uncertainty, (a slot machine is meant to be random - and we would like to discover a pattern in the “random” data if it exists\u0026hellip;).\nEach time we pull the lever on our bandit, it gives a different cash payout every time.\nSo in figure 1 above sometimes it will be $65, sometimes it will be $80, but the average payout over time will be $70. This is the centre of our distribution.\nNow let\u0026rsquo;s examine the case of two slot machines.\nEach slot machine will each give payouts according to two different normal distributions.\nWhat does this mean? Have a look at the image below\nfigure 3, Here we can see that our first bandit, the bandit in blue, had an average value of 70 - that is to say the distribution was centered around 70.\n","date":1548585656,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1548585656,"objectID":"4b9e90098b5cd5d6b58255a81a75a489","permalink":"https://PaulConyngham.github.io/the-multi-armed-bandit-problem/","publishdate":"2019-01-27T21:40:56+11:00","relpermalink":"/the-multi-armed-bandit-problem/","section":"","summary":"By: Paul Steven Conyngham Reinforcement Learning Terminology Decoded #1:        Intro to Reinforcement Learning\nBy: Paul Steven Conyngham #Bandits!\nScientists, and machine learning researchers in particular love to give fancy names to things so that no one can understand what they are on about.\nFor someone relatively new to machine learning, \u0026ldquo;The multi armed bandit problem\u0026rdquo; sounds like one of these fancy names.","tags":[],"title":"The Multi Armed Bandit Problem","type":"page"}]